syntax = "proto3";

import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package ganymede.v2;

// Service definition
service DeviceService {
    rpc CreateDevice(CreateDeviceRequest) returns (Device);
    rpc UpdateDevice(UpdateDeviceRequest) returns (Device);
    rpc GetDevice(GetDeviceRequest) returns (Device);
    rpc ListDevice(ListDeviceRequest) returns (ListDeviceResponse);
    rpc DeleteDevice(DeleteDeviceRequest) returns (google.protobuf.Empty);

    rpc Poll(PollRequest) returns (PollResponse);

    rpc CreateConfig(CreateConfigRequest) returns (Config);
    rpc UpdateConfig(UpdateConfigRequest) returns (Config);
    rpc GetConfig(GetConfigRequest) returns (Config);
    rpc ListConfig(ListConfigRequest) returns (ListConfigResponse);
    rpc DeleteConfig(DeleteConfigRequest) returns (google.protobuf.Empty);
}

// Requests and responses
message CreateDeviceRequest {
    Device device = 1;
}

message UpdateDeviceRequest {
    Device device = 1;
}

message GetDeviceRequest {
    string device_uid = 1;
}

message ListDeviceRequest {
    oneof filter {
        string name_filter = 1;
        string config_uid = 2;
    }
}

message ListDeviceResponse {
    repeated Device devices = 1;
}

message DeleteDeviceRequest {
    string device_uid = 1;
    string reason = 2;
}

message PollRequest {
    string device_mac = 1;

    // Time elapsed since last restart
    google.protobuf.Duration uptime = 2;
}

message PollResponse {
    string device_uid = 1;
    string device_display_name = 2;

    string config_uid = 11;
    string config_display_name = 12;

    // Current device's offset from UTC (including DST if applicable)
    int64 timezone_offset_minutes = 20;
    google.protobuf.Duration poll_period = 21;

    LightConfig light_config = 101;
    repeated SensorConfig sensor_configs = 102;
}

message CreateConfigRequest {
    Config config = 1;
}

message GetConfigRequest {
    string config_uid = 1;
}

message ListConfigRequest {
    string name_filter = 1;
}

message ListConfigResponse {
    repeated Config configs = 1;
}

message UpdateConfigRequest {
    Config config = 1;
}

message DeleteConfigRequest {
    string config_uid = 1;
    string reason = 2;

    string replacement_config_uid = 3;
}

message DeleteConfigResponse {

}

// Primitive message types
message Device {
    string uid = 1;

    string mac = 2;

    // Required.
    string display_name = 10;

    string description = 11;

    // Device timezone in IANA <zone>/<city> format
    string timezone = 12;

    string config_uid = 20;

    // Output only. Time elapsed since last restart
    google.protobuf.Timestamp last_poll = 100;
    google.protobuf.Duration uptime = 101;
}

message Time {
    uint32 hour = 1;
    uint32 minute = 2;
    uint32 second = 3;
}

message Luminaire {
    message DailySchedule {
        Time start = 1;
        Time stop = 2;

        // 0-255. If use_pwm is false, any non-zero value will be interpreted as "fully-on"
        uint32 intensity = 3; 
    }

    uint32 port = 1;
    bool active_high = 2;

    repeated DailySchedule photo_period = 3;
}

message LightConfig {
    repeated Luminaire luminaires = 1;
}

message Am2320Config {
    uint32 sda_port = 1;
    uint32 scl_port = 2;
}

message SensorConfig {
    oneof sensor {
        Am2320Config am2320 = 1;
    };
}

message Config {
    // Output only.
    string uid = 1;

    string display_name = 2;

    google.protobuf.Duration poll_period = 3;

    reserved 10, 11;
    reserved "pomp_config", "solution_config";
    LightConfig light_config = 12;
    repeated SensorConfig sensor_configs = 13;
}