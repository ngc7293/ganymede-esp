syntax = "proto3";

package ganymede.services.measurements;

// Primitive message types
message AtmosphericMeasurements {
    float temperature = 1;  // In Celsius
    float humidity = 2;     // In RH %
}

message SolutionMeasurements {
    float flow = 1;         // In Liters per Minute
    
    float temperature = 2;  // In Celsius
    float ph = 3;           // Range [1-14]
    
    //FIXME: Figure out what the standard range for this would be
    float ec = 4;           // In mho 
}

message Measurement {
    string source_uid = 1;
    uint64 timestamp = 2;   // Epoch time

    AtmosphericMeasurements atmosphere = 10;
    SolutionMeasurements solution = 11;
}

// Requests and responses
message PushMeasurementsRequest {
    repeated Measurement measurements = 1;
}

message GetMeasurementsRequest {
    string source_uid = 1;

    uint64 from_timestamp = 2;
    uint64 to_timestamp = 3;
}

message GetMeasurementsResponse {
    repeated Measurement measurements = 1;
}

message Empty {}

// Service
service MeasurementsService {
    rpc PushMeasurements(PushMeasurementsRequest) returns (Empty);
    rpc GetMeasurements(GetMeasurementsRequest) returns (GetMeasurementsResponse);
}